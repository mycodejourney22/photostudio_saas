<!-- app/views/sales/new.html.erb -->
<% content_for :title, "New Sale - #{current_tenant.name}" %>

<div class="min-h-screen bg-gray-50 flex">
  <!-- Sidebar - Desktop -->
  <div class="hidden lg:flex lg:flex-shrink-0">
    <div class="flex flex-col w-64">
      <div class="flex-1 flex flex-col min-h-0 bg-gradient-to-b from-blue-600 to-purple-700">
        <%= render 'shared/sidebar' %>
      </div>
    </div>
  </div>

  <!-- Mobile sidebar overlay -->
  <div class="lg:hidden" data-controller="mobile-navigation">
    <!-- Mobile menu button -->
    <div class="fixed top-4 left-4 z-50">
      <button data-action="mobile-navigation#toggleMenu"
              class="bg-white p-2 rounded-lg shadow-lg text-gray-600 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-500">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
        </svg>
      </button>
    </div>

    <!-- Mobile backdrop -->
    <div data-mobile-navigation-target="backdrop"
         data-action="click->mobile-navigation#closeOnBackdrop"
         class="hidden fixed inset-0 bg-black bg-opacity-50 z-40"></div>

    <!-- Mobile sidebar -->
    <div data-mobile-navigation-target="menu"
         class="fixed inset-y-0 left-0 z-50 w-64 bg-gradient-to-b from-blue-600 to-purple-700 shadow-lg transform -translate-x-full transition-transform duration-300 ease-in-out">
      <%= render 'shared/sidebar' %>
    </div>
  </div>

  <!-- Main content -->
  <div class="flex-1 flex flex-col overflow-hidden">
    <!-- Header -->
    <header class="bg-white shadow-sm border-b border-gray-200 flex-shrink-0">
      <div class="px-4 lg:px-6 py-4">
        <div class="flex items-center justify-between">
          <div class="flex items-center space-x-4 ml-12 lg:ml-0">
            <%= link_to sales_path, class: "text-gray-500 hover:text-gray-700" do %>
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
              </svg>
            <% end %>
            <div>
              <h1 class="text-xl lg:text-2xl font-bold text-gray-900">
                Create New Sale
              </h1>
              <p class="text-gray-600 text-sm mt-1">Add products and services to create a sale</p>
            </div>
          </div>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="flex-1 overflow-y-auto p-4 lg:p-6">
      <div class="max-w-4xl mx-auto">

        <%= form_with model: @sale, local: true, class: "space-y-6" do |form| %>

          <!-- Error Messages -->
          <% if @sale.errors.any? %>
            <div class="bg-red-50 border border-red-200 rounded-lg p-4">
              <div class="flex">
                <div class="flex-shrink-0">
                  <svg class="h-5 w-5 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                  </svg>
                </div>
                <div class="ml-3">
                  <h3 class="text-sm font-medium text-red-800">Please fix the following errors:</h3>
                  <ul class="mt-2 text-sm text-red-700 list-disc list-inside">
                    <% @sale.errors.full_messages.each do |message| %>
                      <li><%= message %></li>
                    <% end %>
                  </ul>
                </div>
              </div>
            </div>
          <% end %>

          <!-- Sale Details Card -->
          <div class="bg-white rounded-lg shadow-sm border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200">
              <h2 class="text-lg font-semibold text-gray-900">Sale Information</h2>
            </div>
            <div class="p-6">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-6">

                <!-- Customer -->
                <div>
                  <%= form.label :customer_id, "Customer", class: "block text-sm font-medium text-gray-700 mb-2" %>
                  <%= form.select :customer_id,
                        options_for_select([['Select Customer', '']] + @customers.map {|c| [c.full_name, c.id]}, @sale.customer_id),
                        {},
                        { class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",
                          onchange: "updateCustomerInfo()" } %>
                  <p class="text-xs text-gray-500 mt-1">
                    <%= link_to "Add new customer", new_customer_path, target: "_blank", class: "text-blue-600 hover:text-blue-800" %>
                  </p>
                </div>

                <!-- Sale Type -->
                <div>
                  <%= form.label :sale_type, "Sale Type", class: "block text-sm font-medium text-gray-700 mb-2" %>
                  <%= form.select :sale_type,
                        options_for_select([
                          ['Walk-in Customer', 'walk_in'],
                          ['Phone Order', 'phone'],
                          ['Online Order', 'online'],
                          ['From Appointment', 'appointment']
                        ], @sale.sale_type),
                        {},
                        { class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } %>
                </div>

                <!-- Sale Date -->
                <div>
                  <%= form.label :sale_date, "Sale Date", class: "block text-sm font-medium text-gray-700 mb-2" %>
                  <%= form.datetime_local_field :sale_date,
                        value: @sale.sale_date&.strftime("%Y-%m-%dT%H:%M"),
                        class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" %>
                </div>

                <!-- Appointment (if applicable) -->
                <div id="appointmentField" style="<%= 'display: none;' unless @sale.sale_type == 'appointment' %>">
                  <%= form.label :appointment_id, "Related Appointment", class: "block text-sm font-medium text-gray-700 mb-2" %>
                  <%= form.select :appointment_id,
                        options_for_select([['Select Appointment', '']] + @appointments.map {|a| ["#{a.customer.full_name} - #{a.scheduled_at.strftime('%m/%d/%Y %I:%M %p')}", a.id]}, @sale.appointment_id),
                        {},
                        { class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } %>
                </div>
              </div>

              <!-- Customer Contact Info (Manual Entry) -->
              <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mt-6">
                <div>
                  <%= form.label :customer_name, "Customer Name", class: "block text-sm font-medium text-gray-700 mb-2" %>
                  <%= form.text_field :customer_name,
                        class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",
                        placeholder: "Enter customer name" %>
                </div>
                <div>
                  <%= form.label :customer_email, "Email", class: "block text-sm font-medium text-gray-700 mb-2" %>
                  <%= form.email_field :customer_email,
                        class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",
                        placeholder: "customer@email.com" %>
                </div>
                <div>
                  <%= form.label :customer_phone, "Phone", class: "block text-sm font-medium text-gray-700 mb-2" %>
                  <%= form.tel_field :customer_phone,
                        class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",
                        placeholder: "(555) 123-4567" %>
                </div>
              </div>

              <!-- Notes -->
              <div class="mt-6">
                <%= form.label :notes, "Notes", class: "block text-sm font-medium text-gray-700 mb-2" %>
                <%= form.text_area :notes,
                      rows: 3,
                      class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",
                      placeholder: "Any special instructions or notes..." %>
              </div>
            </div>
          </div>

          <!-- Sale Items Card -->
          <div class="bg-white rounded-lg shadow-sm border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200 flex items-center justify-between">
              <h2 class="text-lg font-semibold text-gray-900">Sale Items</h2>
              <button type="button" onclick="addSaleItem()"
                      class="inline-flex items-center px-3 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                </svg>
                Add Item
              </button>
            </div>
            <div class="p-6">

              <!-- Sale Items List -->
              <div id="saleItemsList">
                <%= form.fields_for :sale_items do |item_form| %>
                  <div class="sale-item-row bg-gray-50 p-4 rounded-lg mb-4">
                    <div class="grid grid-cols-1 md:grid-cols-6 gap-4 items-end">

                      <!-- Item Type -->
                      <div>
                        <%= item_form.label :item_type, "Type", class: "block text-sm font-medium text-gray-700 mb-2" %>
                        <%= item_form.select :item_type,
                              options_for_select([
                                ['Service', 'service'],
                                ['Product', 'product'],
                                ['Add-on', 'addon'],
                                ['Discount', 'discount']
                              ], item_form.object.item_type),
                              {},
                              { class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",
                                onchange: "updateItemType(this)" } %>
                      </div>

                      <!-- Name -->
                      <div>
                        <%= item_form.label :name, "Item Name", class: "block text-sm font-medium text-gray-700 mb-2" %>
                        <%= item_form.text_field :name,
                              class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",
                              placeholder: "Item name" %>
                      </div>

                      <!-- Quantity -->
                      <div>
                        <%= item_form.label :quantity, "Qty", class: "block text-sm font-medium text-gray-700 mb-2" %>
                        <%= item_form.number_field :quantity,
                              value: item_form.object.quantity || 1,
                              min: 1,
                              class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",
                              onchange: "calculateItemTotal(this)" %>
                      </div>

                      <!-- Unit Price -->
                      <div>
                        <%= item_form.label :unit_price, "Unit Price", class: "block text-sm font-medium text-gray-700 mb-2" %>
                        <%= item_form.number_field :unit_price,
                              step: 0.01,
                              min: 0,
                              class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",
                              onchange: "calculateItemTotal(this)" %>
                      </div>

                      <!-- Total Price -->
                      <div>
                        <%= item_form.label :total_price, "Total", class: "block text-sm font-medium text-gray-700 mb-2" %>
                        <%= item_form.number_field :total_price,
                              step: 0.01,
                              readonly: true,
                              class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm bg-gray-100 focus:outline-none focus:ring-blue-500 focus:border-blue-500 item-total" %>
                      </div>

                      <!-- Remove Button -->
                      <div>
                        <button type="button" onclick="removeSaleItem(this)"
                                class="w-full px-3 py-2 bg-red-100 text-red-700 text-sm font-medium rounded-md hover:bg-red-200 transition-colors">
                          Remove
                        </button>
                        <%= item_form.hidden_field :_destroy, value: false, class: "destroy-field" %>
                      </div>
                    </div>

                    <!-- Description -->
                    <div class="mt-4">
                      <%= item_form.label :description, "Description (optional)", class: "block text-sm font-medium text-gray-700 mb-2" %>
                      <%= item_form.text_area :description,
                            rows: 2,
                            class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",
                            placeholder: "Item description or details..." %>
                    </div>

                    <!-- Service Tier (for services) -->
                    <div class="service-tier-field mt-4" style="<%= 'display: none;' unless item_form.object.item_type == 'service' %>">
                      <%= item_form.label :service_tier_id, "Service Package", class: "block text-sm font-medium text-gray-700 mb-2" %>
                      <%= item_form.select :service_tier_id,
                            options_for_select([['Select Service Package', '']] + @service_tiers.map {|st| ["#{st.service_package.name} - #{st.name}", st.id]}, item_form.object.service_tier_id),
                            {},
                            { class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } %>
                    </div>

                    <!-- Product Category (for products) -->
                    <div class="product-category-field mt-4" style="<%= 'display: none;' unless item_form.object.item_type == 'product' %>">
                      <%= item_form.label :product_category, "Product Category", class: "block text-sm font-medium text-gray-700 mb-2" %>
                      <%= item_form.select :product_category,
                            options_for_select([
                              ['Passport Photos', 'passport'],
                              ['Prints', 'prints'],
                              ['Frames', 'frames'],
                              ['Albums', 'albums'],
                              ['Digital Products', 'digital'],
                              ['Canvas Prints', 'canvas'],
                              ['Metal Prints', 'metal_prints'],
                              ['Photo Books', 'photo_books'],
                              ['Accessories', 'accessories'],
                              ['Gift Cards', 'gift_cards'],
                              ['Other', 'other']
                            ], item_form.object.product_category),
                            { include_blank: 'Select category...' },
                            { class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } %>
                    </div>
                  </div>
                <% end %>
              </div>

              <!-- Add Item Button (if no items exist) -->
              <div id="noItemsMessage" style="<%= 'display: none;' if @sale.sale_items.any? %>">
                <div class="text-center py-8">
                  <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
                  </svg>
                  <p class="mt-2 text-sm text-gray-500">No items added yet</p>
                  <button type="button" onclick="addSaleItem()"
                          class="mt-4 inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors">
                    Add First Item
                  </button>
                </div>
              </div>

              <!-- Quick Add Buttons -->
              <div class="mt-6 pt-6 border-t border-gray-200">
                <h3 class="text-sm font-medium text-gray-900 mb-4">Quick Add Items</h3>
                <div class="grid grid-cols-2 md:grid-cols-4 gap-3">
                  <button type="button" onclick="addQuickItem('passport')"
                          class="flex flex-col items-center p-3 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                    <svg class="w-6 h-6 text-blue-600 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
                    </svg>
                    <span class="text-xs font-medium">Passport Photos</span>
                    <span class="text-xs text-gray-500">$25.00</span>
                  </button>

                  <button type="button" onclick="addQuickItem('prints')"
                          class="flex flex-col items-center p-3 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                    <svg class="w-6 h-6 text-green-600 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"/>
                    </svg>
                    <span class="text-xs font-medium">Prints</span>
                    <span class="text-xs text-gray-500">$15.00</span>
                  </button>

                  <button type="button" onclick="addQuickItem('digital')"
                          class="flex flex-col items-center p-3 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                    <svg class="w-6 h-6 text-purple-600 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"/>
                    </svg>
                    <span class="text-xs font-medium">Digital Gallery</span>
                    <span class="text-xs text-gray-500">$50.00</span>
                  </button>

                  <button type="button" onclick="addQuickItem('rush')"
                          class="flex flex-col items-center p-3 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors">
                    <svg class="w-6 h-6 text-orange-600 mb-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                    <span class="text-xs font-medium">Rush Service</span>
                    <span class="text-xs text-gray-500">$75.00</span>
                  </button>
                </div>
              </div>
            </div>
          </div>

          <!-- Sale Summary Card -->
          <div class="bg-white rounded-lg shadow-sm border border-gray-200">
            <div class="px-6 py-4 border-b border-gray-200">
              <h2 class="text-lg font-semibold text-gray-900">Sale Summary</h2>
            </div>
            <div class="p-6">
              <div class="space-y-4">
                <div class="flex justify-between">
                  <span class="text-sm text-gray-600">Subtotal</span>
                  <span class="text-sm font-medium text-gray-900" id="subtotalAmount">$0.00</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm text-gray-600">Tax</span>
                  <span class="text-sm font-medium text-gray-900" id="taxAmount">$0.00</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm text-gray-600">Discount</span>
                  <span class="text-sm font-medium text-gray-900" id="discountAmount">$0.00</span>
                </div>
                <div class="border-t border-gray-200 pt-4">
                  <div class="flex justify-between">
                    <span class="text-lg font-semibold text-gray-900">Total</span>
                    <span class="text-lg font-semibold text-gray-900" id="totalAmount">$0.00</span>
                  </div>
                </div>

                <!-- Payment Method -->
                <div class="pt-4 border-t border-gray-200">
                  <%= form.label :payment_method, "Payment Method", class: "block text-sm font-medium text-gray-700 mb-2" %>
                  <%= form.select :payment_method,
                        options_for_select([
                          ['Cash', 'cash'],
                          ['Credit/Debit Card', 'card'],
                          ['Bank Transfer', 'bank_transfer'],
                          ['Check', 'check'],
                          ['PayPal', 'paypal'],
                          ['Other', 'other']
                        ], @sale.payment_method),
                        { include_blank: 'Select payment method...' },
                        { class: "block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500" } %>
                </div>
              </div>
            </div>
          </div>

          <!-- Form Actions -->
          <div class="flex justify-end space-x-4">
            <%= link_to sales_path, class: "px-6 py-2 border border-gray-300 text-gray-700 text-sm font-medium rounded-lg hover:bg-gray-50 transition-colors" do %>
              Cancel
            <% end %>

            <%= form.submit "Save as Draft", name: "draft",
                  class: "px-6 py-2 bg-gray-600 text-white text-sm font-medium rounded-lg hover:bg-gray-700 transition-colors" %>

            <%= form.submit "Create Sale",
                  class: "px-6 py-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white text-sm font-medium rounded-lg hover:from-blue-700 hover:to-purple-700 transition-all" %>
          </div>

        <% end %>
      </div>
    </main>
  </div>
</div>

<script>
// Sale item management
let itemIndex = <%= @sale.sale_items.length %>;

function addSaleItem() {
  const itemsList = document.getElementById('saleItemsList');
  const noItemsMessage = document.getElementById('noItemsMessage');

  const newItemHtml = `
    <div class="sale-item-row bg-gray-50 p-4 rounded-lg mb-4">
      <div class="grid grid-cols-1 md:grid-cols-6 gap-4 items-end">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Type</label>
          <select name="sale[sale_items_attributes][${itemIndex}][item_type]"
                  class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                  onchange="updateItemType(this)">
            <option value="service">Service</option>
            <option value="product">Product</option>
            <option value="addon">Add-on</option>
            <option value="discount">Discount</option>
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Item Name</label>
          <input type="text" name="sale[sale_items_attributes][${itemIndex}][name]"
                 class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                 placeholder="Item name">
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Qty</label>
          <input type="number" name="sale[sale_items_attributes][${itemIndex}][quantity]"
                 value="1" min="1"
                 class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                 onchange="calculateItemTotal(this)">
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Unit Price</label>
          <input type="number" name="sale[sale_items_attributes][${itemIndex}][unit_price]"
                 step="0.01" min="0"
                 class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                 onchange="calculateItemTotal(this)">
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">Total</label>
          <input type="number" name="sale[sale_items_attributes][${itemIndex}][total_price]"
                 step="0.01" readonly
                 class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm bg-gray-100 focus:outline-none focus:ring-blue-500 focus:border-blue-500 item-total">
        </div>
        <div>
          <button type="button" onclick="removeSaleItem(this)"
                  class="w-full px-3 py-2 bg-red-100 text-red-700 text-sm font-medium rounded-md hover:bg-red-200 transition-colors">
            Remove
          </button>
          <input type="hidden" name="sale[sale_items_attributes][${itemIndex}][_destroy]" value="false" class="destroy-field">
        </div>
      </div>
      <div class="mt-4">
        <label class="block text-sm font-medium text-gray-700 mb-2">Description (optional)</label>
        <textarea name="sale[sale_items_attributes][${itemIndex}][description]" rows="2"
                  class="block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
                  placeholder="Item description or details..."></textarea>
      </div>
    </div>
  `;

  itemsList.insertAdjacentHTML('beforeend', newItemHtml);
  noItemsMessage.style.display = 'none';
  itemIndex++;
  updateTotals();
}

function removeSaleItem(button) {
  const itemRow = button.closest('.sale-item-row');
  const destroyField = itemRow.querySelector('.destroy-field');

  if (destroyField.name.includes('new_')) {
    // Remove new item completely
    itemRow.remove();
  } else {
    // Mark existing item for destruction
    destroyField.value = 'true';
    itemRow.style.display = 'none';
  }

  updateTotals();

  // Show no items message if no visible items
  const visibleItems = document.querySelectorAll('.sale-item-row:not([style*="display: none"])');
  if (visibleItems.length === 0) {
    document.getElementById('noItemsMessage').style.display = 'block';
  }
}

function addQuickItem(type) {
  addSaleItem();

  const lastItem = document.querySelector('.sale-item-row:last-child');
  const nameField = lastItem.querySelector('input[name*="[name]"]');
  const priceField = lastItem.querySelector('input[name*="[unit_price]"]');
  const typeField = lastItem.querySelector('select[name*="[item_type]"]');
  const categoryField = lastItem.querySelector('select[name*="[product_category]"]');

  switch(type) {
    case 'passport':
      nameField.value = 'Passport Photos';
      priceField.value = '25.00';
      typeField.value = 'product';
      if (categoryField) categoryField.value = 'passport';
      break;
    case 'prints':
      nameField.value = '4x6 Prints';
      priceField.value = '15.00';
      typeField.value = 'product';
      if (categoryField) categoryField.value = 'prints';
      break;
    case 'digital':
      nameField.value = 'Digital Gallery Access';
      priceField.value = '50.00';
      typeField.value = 'product';
      if (categoryField) categoryField.value = 'digital';
      break;
    case 'rush':
      nameField.value = 'Rush Service';
      priceField.value = '75.00';
      typeField.value = 'addon';
      break;
  }

  calculateItemTotal(priceField);
}

function calculateItemTotal(input) {
  const itemRow = input.closest('.sale-item-row');
  const quantity = parseFloat(itemRow.querySelector('input[name*="[quantity]"]').value) || 0;
  const unitPrice = parseFloat(itemRow.querySelector('input[name*="[unit_price]"]').value) || 0;
  const totalField = itemRow.querySelector('input[name*="[total_price]"]');

  const total = quantity * unitPrice;
  totalField.value = total.toFixed(2);

  updateTotals();
}

function updateTotals() {
  const totals = document.querySelectorAll('.item-total');
  let subtotal = 0;

  totals.forEach(total => {
    const itemRow = total.closest('.sale-item-row');
    if (itemRow && itemRow.style.display !== 'none') {
      subtotal += parseFloat(total.value) || 0;
    }
  });

  const tax = subtotal * 0.0875; // 8.75% tax rate - adjust as needed
  const discount = 0; // You can add discount logic here
  const grandTotal = subtotal + tax - discount;

  document.getElementById('subtotalAmount').textContent = `${subtotal.toFixed(2)}`;
  document.getElementById('taxAmount').textContent = `${tax.toFixed(2)}`;
  document.getElementById('discountAmount').textContent = `${discount.toFixed(2)}`;
  document.getElementById('totalAmount').textContent = `${grandTotal.toFixed(2)}`;
}

function updateItemType(select) {
  const itemRow = select.closest('.sale-item-row');
  const serviceTierField = itemRow.querySelector('.service-tier-field');
  const productCategoryField = itemRow.querySelector('.product-category-field');

  if (serviceTierField) {
    serviceTierField.style.display = select.value === 'service' ? 'block' : 'none';
  }

  if (productCategoryField) {
    productCategoryField.style.display = select.value === 'product' ? 'block' : 'none';
  }
}

function updateCustomerInfo() {
  const customerSelect = document.querySelector('select[name="sale[customer_id]"]');
  const customerId = customerSelect.value;

  if (!customerId) return;

  // You could fetch customer info via AJAX here
  // For now, just clear the manual fields when a customer is selected
  const nameField = document.querySelector('input[name="sale[customer_name]"]');
  const emailField = document.querySelector('input[name="sale[customer_email]"]');
  const phoneField = document.querySelector('input[name="sale[customer_phone]"]');

  if (customerId) {
    // Fetch customer data (implement AJAX call here)
    // For now, just get the selected customer name
    const selectedOption = customerSelect.options[customerSelect.selectedIndex];
    nameField.value = selectedOption.text;
  }
}

// Initialize totals on page load
document.addEventListener('DOMContentLoaded', function() {
  updateTotals();

  // Show/hide appointment field based on sale type
  const saleTypeSelect = document.querySelector('select[name="sale[sale_type]"]');
  if (saleTypeSelect) {
    saleTypeSelect.addEventListener('change', function() {
      const appointmentField = document.getElementById('appointmentField');
      appointmentField.style.display = this.value === 'appointment' ? 'block' : 'none';
    });
  }
});
</script>
